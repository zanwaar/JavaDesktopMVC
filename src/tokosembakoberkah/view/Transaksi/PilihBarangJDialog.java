/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package tokosembakoberkah.view.Transaksi;

import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import tokosembakoberkah.controller.BarangController;
import tokosembakoberkah.model.BarangModel;

/**
 *
 * @author Lenovo
 */
public class PilihBarangJDialog extends javax.swing.JDialog {

    /**
     * Creates new form PilihBarangJDialog
     */
    private final BarangController barangController;
    private int currentPage = 1;
    private final int rowsPerPage = 10;
    public PilihBarangJDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        barangController = new BarangController();
        loadDataBarang();
        updatePaginationButtons();
        render();
        setLocationRelativeTo(null);
    }
        private void updatePaginationButtons() {
        int totalRows = barangController.getBarangCount();
        int totalPages = (int) Math.ceil((double) totalRows / rowsPerPage);
        System.out.println("total Rows: " + totalRows + "Total Page " + totalPages);
        int prev = 1;
        int next = 0;
        page.setText("Total Pages " + totalPages);
        prevButton.setText("Page " + (currentPage - prev));
        nextButton.setText("Page " + (currentPage + next));
        if (currentPage <= 1) {
            prevButton.setEnabled(false);

        } else {
            prevButton.setEnabled(true);
        }

        if (currentPage >= totalPages) {
            nextButton.setEnabled(false);
        } else {
            nextButton.setEnabled(true);
        }
    }
    private void render() {
        int total = barangController.getBarangCount();
        count.setText("Jumlah Data : " + total);
    }

    private void loadDataBarang() {
        DefaultTableModel model = (DefaultTableModel) tabelbarang.getModel();
        model.setRowCount(0);

        // Mendapatkan daftar barang berdasarkan halaman
        List<BarangModel> barangList = barangController.getBarangByPage(currentPage, rowsPerPage);

        // Tambahkan data barang ke dalam tabel
        int nomorUrut = (currentPage - 1) * rowsPerPage + 1;
        for (BarangModel barang : barangList) {
            Object[] rowData = {barang.getId(), nomorUrut, barang.getKode(), barang.getNama(), barang.getKategori(), barang.getSatuan(), barang.getStok(), barang.getHargaSatuan()};
            model.addRow(rowData);
            nomorUrut++;
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabelbarang = new javax.swing.JTable();
        prevButton = new javax.swing.JButton();
        nextButton = new javax.swing.JButton();
        page = new javax.swing.JLabel();
        count = new javax.swing.JLabel();
        PilihData = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("sansserif", 1, 24)); // NOI18N
        jLabel1.setText("Pilih Barang");

        tabelbarang.setBackground(new java.awt.Color(20, 49, 73));
        tabelbarang.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        tabelbarang.setForeground(new java.awt.Color(255, 255, 255));
        tabelbarang.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, "1", "SQS", "SQS", "QSQS", "SQS", "QS", "QSQ"},
                {null, "2", "WD", "SQW", "QW", "QS", "SQS", "SSQS"},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "id", "NO", "KODE", "NAMA", "KATEGORI", "SATUAN", "STOK", "HARGA"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabelbarang.setFocusable(false);
        tabelbarang.setGridColor(new java.awt.Color(255, 255, 255));
        tabelbarang.setRowHeight(25);
        tabelbarang.setSelectionBackground(new java.awt.Color(0, 153, 153));
        tabelbarang.setSelectionForeground(new java.awt.Color(255, 255, 255));
        tabelbarang.setShowGrid(true);
        tabelbarang.setSurrendersFocusOnKeystroke(true);
        jScrollPane1.setViewportView(tabelbarang);
        if (tabelbarang.getColumnModel().getColumnCount() > 0) {
            tabelbarang.getColumnModel().getColumn(0).setMinWidth(0);
            tabelbarang.getColumnModel().getColumn(0).setPreferredWidth(0);
            tabelbarang.getColumnModel().getColumn(0).setMaxWidth(0);
        }

        prevButton.setText("jButton4");
        prevButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                prevButtonActionPerformed(evt);
            }
        });

        nextButton.setText("jButton4");
        nextButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nextButtonActionPerformed(evt);
            }
        });

        page.setText("jLabel2");

        count.setText("jLabel2");

        PilihData.setText("Pilih Data");
        PilihData.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PilihDataActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(PilihData)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(page)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(prevButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(nextButton))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1053, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(count))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nextButton)
                    .addComponent(prevButton)
                    .addComponent(PilihData)
                    .addComponent(page))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 279, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(count)
                .addGap(54, 54, 54))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void prevButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_prevButtonActionPerformed
        // TODO add your handling code here:
        if (currentPage > 1) {
            currentPage--;
            loadDataBarang();
            updatePaginationButtons();
        }
    }//GEN-LAST:event_prevButtonActionPerformed

    private void nextButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nextButtonActionPerformed
        // TODO add your handling code here:
        int totalRows = barangController.getBarangCount();
        int totalPages = (int) Math.ceil((double) totalRows / rowsPerPage);

        if (currentPage < totalPages) {
            currentPage++;
            loadDataBarang();
            updatePaginationButtons();
        }
    }//GEN-LAST:event_nextButtonActionPerformed
    private BarangMasuk barangMasuk;

    public void setTransaksiPanel(BarangMasuk barangMasuk) {
        this.barangMasuk = barangMasuk;
    }
    private void PilihDataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PilihDataActionPerformed
        // TODO add your handling code here:
        pilihDataBarang();

    }//GEN-LAST:event_PilihDataActionPerformed

    private void pilihDataBarang() {
        int selectedRow = tabelbarang.getSelectedRow();
        DefaultTableModel model = (DefaultTableModel) tabelbarang.getModel();
        if (selectedRow != -1) {
            // Ambil data yang ingin dikirim
            int harga = (int) model.getValueAt(selectedRow, 7);
            String namaBarang = (String) model.getValueAt(selectedRow, 3);
            String kategori = (String) model.getValueAt(selectedRow, 4);
            // Kirim data ke TransaksiPanel
            barangMasuk.setBarangData(namaBarang, kategori, harga);
            dispose();

        } else {
            JOptionPane.showMessageDialog(this, "Pilih baris data dulu.", "Warning", JOptionPane.WARNING_MESSAGE);
        }
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PilihBarangJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PilihBarangJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PilihBarangJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PilihBarangJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                PilihBarangJDialog dialog = new PilihBarangJDialog(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton PilihData;
    private javax.swing.JLabel count;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton nextButton;
    private javax.swing.JLabel page;
    private javax.swing.JButton prevButton;
    private javax.swing.JTable tabelbarang;
    // End of variables declaration//GEN-END:variables
}
